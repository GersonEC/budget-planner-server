generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type MonthlyBudgetBills {
  id          String
  amount      Int
  outflowName String
  date        DateTime @db.Date
  description String
}

type MonthlyBudgetCashflow {
  inflow  MonthlyBudgetCashflowInflow
  netflow Int
  outflow MonthlyBudgetCashflowOutflow
}

type MonthlyBudgetCashflowInflow {
  flows     MonthlyBudgetCashflowInflowFlows[]
  totalFlow Int
}

type MonthlyBudgetCashflowInflowFlows {
  name     String
  quantity Int
  type     String
  expenses Int?
}

type MonthlyBudgetCashflowOutflow {
  flows     MonthlyBudgetCashflowOutflowFlows[]
  totalFlow Int
}

type MonthlyBudgetCashflowOutflowFlows {
  name     String
  quantity Int
  type     String
  expenses Int
}

model MonthlyBudget {
  id       String                @id @default(auto()) @map("_id") @db.ObjectId
  userId   String                @db.ObjectId // ðŸ”¥ Reference User model
  user     User                  @relation(fields: [userId], references: [id], onDelete: Cascade) // Relation to User
  bills    MonthlyBudgetBills[]
  budget   Int
  cashflow MonthlyBudgetCashflow
  expenses Int
  month    Int
  year     Int
}

model Session {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionId String   @unique // Clerk's session ID
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  expiresAt DateTime
}

model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  clerkId       String          @unique // Clerk's user ID
  email         String          @unique
  firstName     String?
  lastName      String?
  sessions      Session[] // One-to-many relation to sessions
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  MonthlyBudget MonthlyBudget[]
}
